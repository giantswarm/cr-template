apiVersion: bootstrap.cluster.x-k8s.io/v1alpha4
kind: KubeadmConfig
metadata:
  name: {{ .Name }}
  namespace: {{ .Namespace }}
  labels:
    "cluster.x-k8s.io/cluster-name": {{ .ClusterName }}
    "cluster.x-k8s.io/watch-filter": capi
    "giantswarm.io/cluster": {{ .ClusterName }}
    "release.giantswarm.io/version": "{{ .Version }}"
    "giantswarm.io/organization": "{{ .Organization }}"
spec:
  files:
  - contentFrom:
      secret:
        key: worker-node-azure.json
        name: {{ .Name }}-azure-json
    owner: root:root
    path: /etc/kubernetes/azure.json
    permissions: "0644"
  - content: {{ .SSHDConfig }}
    encoding: base64
    owner: root
    path: /etc/ssh/sshd_config
    permissions: "640"
  - content: {{ .SSOPublicKey }}
    encoding: base64
    owner: root
    path: /etc/ssh/trusted-user-ca-keys.pem
    permissions: "600"
  - content: Z2lhbnRzd2FybSBBTEw9KEFMTDpBTEwpIE5PUEFTU1dEOiBBTEw=
    encoding: base64
    owner: root
    path: /etc/sudoers.d/giantswarm
    permissions: "600"
  joinConfiguration:
    nodeRegistration:
      kubeletExtraArgs:
        azure-container-registry-config: /etc/kubernetes/azure.json
        cloud-config: /etc/kubernetes/azure.json
        cloud-provider: azure
        node-labels: giantswarm.io/machine-pool={{ .Name }}
      name: '{{ `{{ ds.meta_data["local_hostname"] }}` }}'
  users:
  - groups: sudo
    name: giantswarm
    shell: /bin/bash
