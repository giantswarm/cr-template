apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  labels:
    release.giantswarm.io/version: {{ .ReleaseVersion }}
    giantswarm.io/cluster: {{ .Name }}
    cluster.x-k8s.io/cluster-name: {{ .Name }}
    giantswarm.io/organization: {{ .Organization }}
    cluster.x-k8s.io/watch-filter: capi
  name: {{ .Name }}-control-plane
  namespace: {{ .Namespace }}
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AWSMachineTemplate
    name: {{ .Name }}-control-plane
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: aws
      controllerManager:
        extraArgs:
          cloud-provider: aws
    files:
    - content: {{ .SSHDConfig }}
      encoding: base64
      owner: root
      path: /etc/ssh/sshd_config
      permissions: "640"
    - content: {{ .SSOPublicKey }}
      encoding: base64
      owner: root
      path: /etc/ssh/trusted-user-ca-keys.pem
      permissions: "600"
    - content: Z2lhbnRzd2FybSBBTEw9KEFMTDpBTEwpIE5PUEFTU1dEOiBBTEw=
      encoding: base64
      owner: root
      path: /etc/sudoers.d/giantswarm
      permissions: "600"
    initConfiguration:
      localAPIEndpoint:
        advertiseAddress: ""
        bindPort: 0
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
        name: '{{ `{{ ds.meta_data.local_hostname }}` }}'
    joinConfiguration:
      discovery: {}
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
        name: '{{ `{{ ds.meta_data.local_hostname }}` }}'
    postKubeadmCommands:
    - service ssh restart
    users:
    - groups: sudo
      name: giantswarm
      shell: /bin/bash
  replicas: 1
  version: {{ .KubernetesVersion }}
