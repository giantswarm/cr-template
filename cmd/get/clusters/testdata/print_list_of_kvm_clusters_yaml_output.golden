apiVersion: v1
items:
- apiVersion: v1
  items:
  - metadata:
      creationTimestamp: "2021-01-02T15:04:32Z"
      name: 1sad2-kvm-cluster-config
      namespace: default
    spec:
      guest:
        dnsZone: ""
        id: 1sad2
        name: test cluster 1
        owner: test
        releaseVersion: 12.0.0
      versionBundle:
        version: ""
  - metadata:
      creationTimestamp: "2021-01-02T15:04:32Z"
      name: 1sad2
      namespace: default
    spec:
      cluster:
        calico:
          cidr: 0
          mtu: 0
          subnet: ""
        customer:
          id: ""
        docker:
          daemon:
            cidr: ""
        etcd:
          altNames: ""
          domain: ""
          port: 0
          prefix: ""
        id: 1sad2
        kubernetes:
          api:
            clusterIPRange: ""
            domain: ""
            securePort: 0
          cloudProvider: ""
          dns:
            ip: ""
          domain: ""
          ingressController:
            docker:
              image: ""
            domain: ""
            insecurePort: 0
            securePort: 0
            wildcardDomain: ""
          kubelet:
            altNames: ""
            domain: ""
            labels: ""
            port: 0
          networkSetup:
            docker:
              image: ""
            kubeProxy:
              conntrackMaxPerCore: 0
          ssh:
            userList: null
        masters: null
        scaling:
          max: 0
          min: 0
        version: ""
      kvm:
        endpointUpdater:
          docker:
            image: ""
        k8sKVM:
          docker:
            image: ""
          storageType: ""
        masters: null
        network:
          flannel:
            vni: 0
        nodeController:
          docker:
            image: ""
        portMappings: null
        workers: null
      versionBundle:
        version: ""
    status:
      cluster:
        network:
          cidr: ""
        scaling:
          desiredCapacity: 0
      kvm:
        nodeIndexes: null
  kind: List
  metadata: {}
- apiVersion: v1
  items:
  - metadata:
      creationTimestamp: "2021-01-02T15:04:32Z"
      name: 2a03f-kvm-cluster-config
      namespace: default
    spec:
      guest:
        dnsZone: ""
        id: 2a03f
        name: test cluster 2
        owner: test
        releaseVersion: 11.0.0
      versionBundle:
        version: ""
  - metadata:
      creationTimestamp: "2021-01-02T15:04:32Z"
      name: 2a03f
      namespace: default
    spec:
      cluster:
        calico:
          cidr: 0
          mtu: 0
          subnet: ""
        customer:
          id: ""
        docker:
          daemon:
            cidr: ""
        etcd:
          altNames: ""
          domain: ""
          port: 0
          prefix: ""
        id: 2a03f
        kubernetes:
          api:
            clusterIPRange: ""
            domain: ""
            securePort: 0
          cloudProvider: ""
          dns:
            ip: ""
          domain: ""
          ingressController:
            docker:
              image: ""
            domain: ""
            insecurePort: 0
            securePort: 0
            wildcardDomain: ""
          kubelet:
            altNames: ""
            domain: ""
            labels: ""
            port: 0
          networkSetup:
            docker:
              image: ""
            kubeProxy:
              conntrackMaxPerCore: 0
          ssh:
            userList: null
        masters: null
        scaling:
          max: 0
          min: 0
        version: ""
      kvm:
        endpointUpdater:
          docker:
            image: ""
        k8sKVM:
          docker:
            image: ""
          storageType: ""
        masters: null
        network:
          flannel:
            vni: 0
        nodeController:
          docker:
            image: ""
        portMappings: null
        workers: null
      versionBundle:
        version: ""
    status:
      cluster:
        conditions:
        - lastTransitionTime: null
          status: ""
          type: Deleting
        network:
          cidr: ""
        scaling:
          desiredCapacity: 0
      kvm:
        nodeIndexes: null
  kind: List
  metadata: {}
- apiVersion: v1
  items:
  - metadata:
      creationTimestamp: "2021-01-02T15:04:32Z"
      name: asd29-kvm-cluster-config
      namespace: default
    spec:
      guest:
        dnsZone: ""
        id: asd29
        name: test cluster 3
        owner: test
        releaseVersion: 10.5.0
      versionBundle:
        version: ""
  - metadata:
      creationTimestamp: "2021-01-02T15:04:32Z"
      name: asd29
      namespace: default
    spec:
      cluster:
        calico:
          cidr: 0
          mtu: 0
          subnet: ""
        customer:
          id: ""
        docker:
          daemon:
            cidr: ""
        etcd:
          altNames: ""
          domain: ""
          port: 0
          prefix: ""
        id: asd29
        kubernetes:
          api:
            clusterIPRange: ""
            domain: ""
            securePort: 0
          cloudProvider: ""
          dns:
            ip: ""
          domain: ""
          ingressController:
            docker:
              image: ""
            domain: ""
            insecurePort: 0
            securePort: 0
            wildcardDomain: ""
          kubelet:
            altNames: ""
            domain: ""
            labels: ""
            port: 0
          networkSetup:
            docker:
              image: ""
            kubeProxy:
              conntrackMaxPerCore: 0
          ssh:
            userList: null
        masters: null
        scaling:
          max: 0
          min: 0
        version: ""
      kvm:
        endpointUpdater:
          docker:
            image: ""
        k8sKVM:
          docker:
            image: ""
          storageType: ""
        masters: null
        network:
          flannel:
            vni: 0
        nodeController:
          docker:
            image: ""
        portMappings: null
        workers: null
      versionBundle:
        version: ""
    status:
      cluster:
        conditions:
        - lastTransitionTime: null
          status: ""
          type: Deleting
        - lastTransitionTime: null
          status: ""
          type: Created
        network:
          cidr: ""
        scaling:
          desiredCapacity: 0
      kvm:
        nodeIndexes: null
  kind: List
  metadata: {}
kind: List
metadata: {}
