version: 2.1

orbs:
  architect: giantswarm/architect@5.10.1

jobs:
  debug-tag:
    docker:
      - image: cimg/base:2024.10
    steps:
      - checkout
      - run: |
          echo "running for tag ${CIRCLE_TAG}"

  update-krew-index:
    docker:
      - image: cimg/go:1.23.2

    environment:
      KREW_RELEASE_BOT_VERSION: v0.0.38
      GITHUB_ACTIONS: "true"
      GITHUB_REPOSITORY: giantswarm/kubectl-gs
      GITHUB_ACTOR: architectbot

    steps:
      - checkout
      - run:
          name: Configure krew-release-bot
          command: |
            echo "using krew-release-bot version ${KREW_RELEASE_BOT_VERSION}"
            curl -LO https://github.com/rajatjindal/krew-release-bot/releases/download/${KREW_RELEASE_BOT_VERSION}/krew-release-bot_${KREW_RELEASE_BOT_VERSION}_linux_amd64.tar.gz
            tar -xvf krew-release-bot_${KREW_RELEASE_BOT_VERSION}_linux_amd64.tar.gz
            echo export GITHUB_REF=refs/tags/${CIRCLE_TAG} >> "$BASH_ENV"
            echo export GITHUB_WORKSPACE=$(pwd) >> "$BASH_ENV"
      - run:
          name: Execute krew-release-bot
          command: ./krew-release-bot action

  go-build-multiarch:
    executor: architect/architect
    resource_class: "medium+"
    steps:
      - checkout
      - architect/tools-info
      - architect/go-cache-restore
      - architect/go-test
      - run:
          name: Build binary (linux/amd64)
          command: |
            CGO_ENABLED=0 GOOS="linux" GOARCH=amd64 go build -ldflags "$(cat .ldflags)" -o ./kubectl-gs-amd64 .
      - run:
          name: Build binary (linux/arm64)
          command: |
            CGO_ENABLED=0 GOOS="linux" GOARCH=arm64 go build -ldflags "$(cat .ldflags)" -o ./kubectl-gs-arm64 .
      - run:
          name: Build binary (linux/ppc64le)
          command: |
            CGO_ENABLED=0 GOOS="linux" GOARCH=ppc64le go build -ldflags "$(cat .ldflags)" -o ./kubectl-gs-ppc64le .
      - run:
          name: Build binary (linux/s390x)
          command: |
            CGO_ENABLED=0 GOOS="linux" GOARCH=s390x go build -ldflags "$(cat .ldflags)" -o ./kubectl-gs-s390x .
      - run:
          name: Build binary (linux/386)
          command: |
            CGO_ENABLED=0 GOOS="linux" GOARCH=386 go build -ldflags "$(cat .ldflags)" -o ./kubectl-gs-386 .
      - architect/go-cache-save
      - persist_to_workspace:
          root: .
          paths:
            - ./kubectl-gs-amd64
            - ./kubectl-gs-arm64
            - ./kubectl-gs-ppc64le
            - ./kubectl-gs-s390x
            - ./kubectl-gs-386

  push-to-registries-multiarch:
    executor: architect/architect
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - attach_workspace:
          at: .
      - architect/image-prepare-tag
      - architect/image-login-to-registries
      - run:
          name: Build the container image using 'docker build'
          command: |
            docker buildx create --name container-builder --driver docker-container --bootstrap --use
            docker buildx ls
            PLATFORMS=linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/386
            docker buildx build --platform ${PLATFORMS} -f ./Dockerfile . --progress plain 2>&1 | tee .docker.log
            docker images

workflows:
  go-build-multiarch:
    jobs:
      - go-build-multiarch:
          context: architect
          name: go-build-multiarch
          filters:
            tags:
              only: /^v.*/
      - push-to-registries-multiarch:
          context: architect
          name: push-to-registries-multiarch
          requires:
            - go-build-multiarch
          filters:
            tags:
              only: /^v.*/


  update-krew:
    jobs:
      - debug-tag:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - request-manual-approval:
          type: approval
          requires:
            - debug-tag
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - update-krew-index:
          requires:
            - debug-tag
            - request-manual-approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
